;;; -*- Mode: Lisp -*-

(in-package rw)

(html-file-page ("index")
  (html
   (:HEAD (:TITLE "ASDF-Binary-Locations")
          (generate-shared-headers)
          )
   (:BODY
    (generate-two-line-header
     "ASDF-Binary-Locations" "How do I work this thing?")
    
    ((:DIV :CLASS "contents")
     (generate-system-sidebar)
     
     ((:DIV :CLASS "system-description")
       (:H3 "What it is")
       (:B "A") "SDF-" (:B "B") "inary-" (:B "L") "ocations is an "
       ((:A :href "http://cliki.net/asdf-extension") "ASDF-Extension") " that makes it easy to specify where your Common Lisp binaries (FASL files) should go. If you don't want to specify, then not to worry: ABL also provides intelligent defaults."
       
       (:H3 "How to use it")
       (:OL
        (:LI "Install ASDF-Binary-Locations using your method of choice.")
        (:LI "Customize it as desired (see below).")
        (:LI "ASDF load it before loading anything else (perhaps from your initialization file)"))
       (:P "Voila, your binaries will be sorted as required but never spindled, folded or mutilated.")
       
       (:H3 "What it does")
       (:P "As you would expect, each Common Lisp implementation has its own format for binary compiled files. If you use multiple implementations (or multiple versions of the same implemention), you'll soon find your source directories littered with various DFSLs, FASLs, CFSLs and so on. This is ugly and makes navigating the sources more difficult. Worse yet, some implementations may share the same file extension or change formats from version to version. This means that you'll find yourself constantly recompiling binaries as you switch from one implementation to the next. That's downright inefficient.")
       (:P "ASDF-Binary-Locations prevents this nightmare by first providing reasonable default locations for binaries of each Lisp and, secondly, by allowing you to customize the locations as required.")
       (:H4 "Default Locations")
       (:P "The default binary location for each Lisp implementation is a subdirectory of the each source directory. To account for different Lisps, Operating Systems, Implementation versions, and so on, ABL borrows code from " ((:A :href "http://common-lisp.net/project/slime/") "SLIME") " to create intelligent directory names as necessary. You can also have ABL put all compiled files into subdirectories of a single central location (see *centralize-lisp-binaries* below for details).")

       (:h4 "Customized Locations - What are variables?")
       (:P "ASDF-Binary-Locations uses the following three variables to provide most of the customization you'll ever want:"
        (:ul (:li "*source-to-target-mappings* - This specifies mappings from source to target. If the target is nil, then it means to not map the source to anything. I.e., to leave  it as is. This has the effect of turning off ASDF-Binary-Locations for the given source directory.")
             (:li "*centralize-lisp-binaries* - If true, compiled lisp files without an explicit mapping (see *source-to-target-mappings*) will be placed in subdirectories of *default-toplevel-directory*. If false, then compiled lisp files without an explicitly mapping will be placed in subdirectories of their sources.")
              (:li "*default-toplevel-directory* - If *centralize-lisp-binaries* is true, then compiled lisp files without an explicit mapping \(see *source-to-target-mappings*\) will be placed in subdirectories of *default-toplevel-directory*.")))
        (:p "It's possible to further customize ABL by writing additional methods on the generic function output-files-for-system-and-operation. Examples and more documentation coming someday...")
              
       ((:A :id "mailing-lists"))
       (:h3 "Mailing Lists")
       (:P "ASDF-Binary-Locations isn't a separate project at this point but if you have
questions, comments or concerns, just drop " (rw:link :mail-gwking :title "Gary King") 
           " a line.")
       
       ((:A :id "downloads"))
       (:H3 "Where is it")
       (:P "A " (rw:link :darcs) " repository is available. The darcs command is listed below:")
       
       (:PRE " darcs get http://common-lisp.net/project/cl-containers/asdf-binary-locations/darcs/asdf-binary-locations ") 
       
       (:P "ASDF-Binary-Locations is also " (rw:link :asdf-install :title "ASDF installable") ". Its CLiki home is right " (rw:link :asdf-binary-locations-cliki :title "where") " you'd expect.")
       
       (:P "There's also a handy " (rw:link :asdf-binary-locations-package :title "gzipped tar file") ".")
       
       (:H3 "Notes and Issues")
       (:UL
        (:LI "SBCL ships with several included ASDF libraries. Unless you tell it not to, ABL will try to place the compiled files for these into new directories which may fail due to directory permissions. You can tell ABL to not mess with the SBCL files by added something like the following to your ~/.sbclrc file"
             (:PRE  
";; force SBCL things to stay in SBCL
\(defvar asdf::*source-to-target-mappings*
  '\(\(\"/usr/local/lib/sbcl/\" nil\)\)\)")))
       
       ((:A :id "news"))
       (:H3 "What is happening")
       ((:TABLE :CLASS "system-news") 
        (:tr
         (:th "5 June 2006")
         (:td "Thanks to Peter Seibel and Robert Goldman for helping to push out a bunch of useful improvements."))
        (:TR
         (:TH "19 Dec 2005")
         (:TD "Created by munging great code together and added a bit of spice.")))))
    
    
    ((:DIV :CLASS "footer")
     (generate-button-row 
      (format nil "Last updated: ~A" 
              (format-date "%A, %e %B %Y" (get-universal-time))))))))